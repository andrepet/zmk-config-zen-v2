#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

// Layers for Windows
#define WIN_COL   0
#define WIN_QRTY  1
#define wNUMBER   2
#define wNAV      3
#define wNAV2     4
#define wFUNC     5
#define wSYMBOL   6
#define wMOUSE    7

// Layers for Mac
#define MAC_COL   8
#define MAC_QRTY  9
#define mNUMBER  10
#define mNAV     11
#define mNAV2    12
#define mFUNC    13
#define mSYMBOL  14
#define mMOUSE   15

// Home row mods macros for Windows
#define wHRML1(k1,k2) &l_ht LC(LGUI) k1   &l_ht LS(LALT) k2
#define wHRML2(k1,k2,k3,k4,k5,k6) &l_ht LCTRL k1   &l_ht LGUI k2   &l_ht LALT k3   &l_ht LCTRL k4   &l_ht LSHIFT k5   &l_ht LC(LS(LALT)) k6
#define wHRML3(k1,k2,k3,k4) &l_ht LA(LGUI) k1   &l_ht LC(LALT) k2   &l_ht LS(LCTRL) k3   &l_ht LC(LS(LA(LGUI))) k4

#define wHRMR1(k1,k2) &r_ht RS(RALT) k1   &r_ht RC(RGUI) k2
#define wHRMR2(k1,k2,k3,k4,k5,k6) &r_ht RC(RS(RALT)) k1   &r_ht RSHIFT k2   &r_ht RCTRL k3   &r_ht RALT k4   &r_ht RGUI k5   &r_ht RCTRL k6
#define wHRMR3(k1,k2,k3,k4) &r_ht RC(RS(RA(RGUI))) k1   &r_ht RS(RCTRL) k2   &r_ht RC(RALT) k3   &r_ht RA(RGUI) k4

// Home row mods macros for Mac
#define mHRML1(k1,k2) &l_ht LC(LGUI) k1   &l_ht LS(LALT) k2
#define mHRML2(k1,k2,k3,k4,k5,k6) &l_ht LCTRL k1   &l_ht LCTRL k2   &l_ht LALT k3   &l_ht LGUI k4   &l_ht LSHIFT k5   &l_ht LC(LS(LALT)) k6
#define mHRML3(k1,k2,k3,k4) &l_ht LA(LCTRL) k1   &l_ht LG(LALT) k2   &l_ht LS(LGUI) k3   &l_ht LC(LS(LA(LGUI))) k4

#define mHRMR1(k1,k2) &r_ht RS(RALT) k1   &r_ht RC(RGUI) k2
#define mHRMR2(k1,k2,k3,k4,k5,k6) &r_ht RC(RS(RALT)) k1   &r_ht RSHIFT k2   &r_ht RGUI k3   &r_ht RALT k4   &r_ht RCTRL k5   &r_ht RCTRL k6
#define mHRMR3(k1,k2,k3,k4) &r_ht RC(RS(RA(RGUI))) k1   &r_ht RS(RGUI) k2   &r_ht RG(RALT) k3   &r_ht RA(RCTRL) k4

// Short commands macros for Windows
#define wSHRT1(k1,k2,k3) &kp LC(k1)   &kp LC(k2)   &kp LA(LC(k3))
#define wSHRT2(k1,k2,k3,k4,k5) &l_ht LCTRL LC(k1)   &l_ht LALT LC(k2)   &l_ht LGUI LC(k3)   &l_ht LSHIFT LC(k4)   &kp LC(k5)
#define wSHRT3(k1,k2,k3,k4,k5) &kp LC(k1)   &kp LC(k2)   &kp LC(k3)   &kp LC(k4)   &kp LC(k5)

// Short commands macros for Mac
#define mSHRT1(k1,k2,k3) &kp LG(k1)   &kp LG(k2)   &kp LA(LG(k3))
#define mSHRT2(k1,k2,k3,k4,k5) &l_ht LCTRL LG(k1)   &l_ht LALT LG(k2)   &l_ht LGUI LG(k3)   &l_ht LSHIFT LG(k4)   &kp LG(k5)
#define mSHRT3(k1,k2,k3,k4,k5) &kp LG(k1)   &kp LG(k2)   &kp LG(k3)   &kp LG(k4)   &kp LG(k5)

// Special swedish character macro for Windows and Mac
#define _OE    LBKT                /* Å */
#define _AE    SQT                 /* Ä */
#define _OO    SEMI                /* Ö */
#define _AMPER CARET               /* & */
#define w_BSLH  RC(RA(MINUS))      /* \ Windows */
#define m_BSLH  LS(RA(N7))         /* \ Mac */
#define _LT    NON_US_BSLH         /* < */
#define _GT    LS(NON_US_BSLH)     /* > */
#define _ASTRX LS(NON_US_HASH)     /* * */
#define w_TILDE RC(RA(RBKT))       /* ~ Windows */
#define m_TILDE RA(RBKT)           /* ~ Mac */
#define _LPAR  LS(N8)              /* ( */
#define _RPAR  LS(N9)              /* ) */
#define _TOP   RBRC                /* ^ */
#define _EQ    RPAR                /* = */
#define _UNDER LS(FSLH)            /* _ */
#define _MINUS FSLH                /* - */
#define _PLUS  MINUS               /* + */
#define _SQUOT NON_US_HASH         /* ' */
#define _DQUOT LS(N2)              /* " */
#define _SEMIC LS(COMMA)           /* ; */
#define _COLON LS(DOT)             /* : */
#define _FSLH  KP_DIVIDE           /* / */
#define _QMARK LS(MINUS)           /* ? */
#define w_LBKT  RC(RA(N8))         /* [ Windows */
#define m_LBKT  RA(N8)             /* [ Mac */
#define w_LBRC  RC(RA(N7))         /* { Windows */
#define m_LBRC  LS(RA(N8))         /* { Mac */
#define w_RBKT  RC(RA(N9))         /* ] Windows */
#define m_RBKT  RA(N9)             /* ] Mac */
#define w_RBRC  RC(RA(N0))         /* } Windows */
#define m_RBRC  LS(RA(N9))         /* } Mac */
#define w_PIPE  RC(RA(NUBS))       /* | Windows */
#define m_PIPE  RA(N7)             /* | Mac */
#define w_AT    RC(RA(N2))         /* @ Windows */
#define m_AT    RA(N2)             /* @ Mac */
#define w_DOLAR RC(RA(N4))         /* $ Windows */
#define m_DOLAR RA(N4)             /* $ Mac */
#define w_EURO  RC(RA(N5))         /* € Windows */
#define m_EURO  LS(N4)             /* € Mac */
#define w_POUND RC(RA(N3))         /* £ Windows */
#define m_POUND RA(N3)             /* £ Mac */
#define w_MICRO RC(RA(M))          /* µ Windows*/ 
#define m_MICRO RA(Y)              /* µ Mac*/ 
#define _PARGH GRAVE               /* § */
#define _HALF  LS(GRAVE)           /* ½  Windows, ° Mac*/
#define _ACUTE EQUAL               /* ´ */
#define _BTICK LS(EQUAL)           /* ` */

// Define experimental mouse movement settings
#define U_MOUSE_MOVE_MAX 1400                     /* <--- New max speed setting (default: 600) */
#define _MM_U MOVE_VERT(-U_MOUSE_MOVE_MAX)
#define _MM_D MOVE_VERT(U_MOUSE_MOVE_MAX)
#define _MM_L MOVE_HOR(-U_MOUSE_MOVE_MAX)
#define _MM_R MOVE_HOR(U_MOUSE_MOVE_MAX)

&mmv {
     time-to-max-speed-ms = <400>;                /* <--- How long time until max speed is reached (default: 500) */
};

// Define experimental mouse scroll settings
#define U_MOUSE_SCROLL_MAX 75                     /* <--- New max speed setting (default: 10) */
#define _MS_U SCROLL_VERT(U_MOUSE_SCROLL_MAX)
#define _MS_D SCROLL_VERT(-U_MOUSE_SCROLL_MAX)
#define _MS_L SCROLL_HOR(-U_MOUSE_SCROLL_MAX)
#define _MS_R SCROLL_HOR(U_MOUSE_SCROLL_MAX)

&mwh {
     time-to-max-speed-ms = <500>;                /* <--- How long time until max speed is reached */
};

/ {
     chosen {
          zmk,matrix_transform = &default_transform;
          //zmk,matrix_transform = &five_column_transform;
     };
};

/ {
     behaviors {
          r_ht: right_hold_tap {
               compatible = "zmk,behavior-hold-tap";
               label = "RIGHT_POSITIONAL_HOLD_TAP";
               #binding-cells = <2>;
               tapping-term-ms = <175>;
               quick_tap_ms = <200>;
               flavor = "tap-preferred";
               bindings = <&kp>, <&kp>;
               hold-trigger-key-positions = <
                    0  1  2  3  4  5 
                   12 13 14 15 16 17
                   24 25 26 27 28 29
                   36 37 38
               >;
          };
          l_ht: left_hold_tap {
               compatible = "zmk,behavior-hold-tap";
               label = "LEFT_POSITIONAL_HOLD_TAP";
               #binding-cells = <2>;
               tapping-term-ms = <175>;
               quick_tap_ms = <200>;
               flavor = "tap-preferred";
               bindings = <&kp>, <&kp>;
               hold-trigger-key-positions = <
                    6  7  8  9 10 11
                   18 19 20 21 22 23
                   30 31 32 33 34 35
                38 39 40 41
               >;
          };
          se_scln: semi_colon_shift_colon {            
               compatible = "zmk,behavior-mod-morph";            
               label = "SWEDISH_SEMICOLON";
               #binding-cells = <0>;
               bindings = <&kp _SEMIC>, <&kp _COLON>; /* ; : */
               mods = <(MOD_LSFT|MOD_RSFT)>;
          };
          se_quot: single_quote_shift_double_quote {            
               compatible = "zmk,behavior-mod-morph";            
               label = "SWEDISH_QUOTE";
               #binding-cells = <0>;
               bindings = <&kp _SQUOT>, <&kp _DQUOT>; /* ' " */
               mods = <(MOD_LSFT|MOD_RSFT)>;
          };
          se_slsh: slash_shift_question {            
               compatible = "zmk,behavior-mod-morph";            
               label = "SWEDISH_SLASH_QUESTION";
               #binding-cells = <0>;
               bindings = <&kp _FSLH>, <&kp _QMARK>; /* / ? */
               mods = <(MOD_LSFT|MOD_RSFT)>;
          };
          w_se_lbrc: w_se_left_bracket {            
               compatible = "zmk,behavior-mod-morph";            
               label = "WINDOWS_SWEDISH_LEFT_BRACKET";
               #binding-cells = <0>;
               bindings = <&kp w_LBKT>, <&kp w_LBRC>; /* [ { Windows */
               mods = <(MOD_LSFT|MOD_RSFT)>;
          };
          m_se_lbrc: m_se_left_bracket {            
               compatible = "zmk,behavior-mod-morph";            
               label = "MAC_SWEDISH_LEFT_BRACKET";
               #binding-cells = <0>;
               bindings = <&kp m_LBKT>, <&kp m_LBRC>; /* [ { Mac */
               mods = <(MOD_LSFT|MOD_RSFT)>;
          };
          w_se_rbrc: w_se_right_bracket {            
               compatible = "zmk,behavior-mod-morph";            
               label = "WINDOWS_SWEDISH_RIGHT_BRACKET";
               #binding-cells = <0>;
               bindings = <&kp w_RBKT>, <&kp w_RBRC>; /* ] } Windows */
               mods = <(MOD_LSFT|MOD_RSFT)>;
          };
          m_se_rbrc: m_se_right_bracket {            
               compatible = "zmk,behavior-mod-morph";            
               label = "MAC_SWEDISH_RIGHT_BRACKET";
               #binding-cells = <0>;
               bindings = <&kp m_RBKT>, <&kp m_RBRC>; /* ] } Mac */
               mods = <(MOD_LSFT|MOD_RSFT)>;
          };
          w_pnd_mic: w_pnd_mic {            
               compatible = "zmk,behavior-mod-morph";            
               label = "WINDOWS_SWEDISH_POUND_SHIFT_MICRO";
               #binding-cells = <0>;
               bindings = <&kp w_POUND>, <&kp w_MICRO>; /* £ µ Windows */
               mods = <(MOD_LSFT|MOD_RSFT)>;
          };
          m_pnd_mic: m_pnd_mic {            
               compatible = "zmk,behavior-mod-morph";            
               label = "MAC_SWEDISH_POUND_SHIFT_MICRO";
               #binding-cells = <0>;
               bindings = <&kp m_POUND>, <&kp m_MICRO>; /* £ µ Mac */
               mods = <(MOD_LSFT|MOD_RSFT)>;
          };
          w_at_pnd: w_at_shift_pound {            
               compatible = "zmk,behavior-mod-morph";            
               label = "WINDOWS_SWEDISH_AT_SHIFT_POUND";
               #binding-cells = <0>;
               bindings = <&kp w_AT>, <&kp w_POUND>; /* @ £  Windows */
               mods = <(MOD_LSFT|MOD_RSFT)>;
          };
          m_at_pnd: m_at_shift_pound {            
               compatible = "zmk,behavior-mod-morph";            
               label = "MAC_SWEDISH_AT_SHIFT_POUND";
               #binding-cells = <0>;
               bindings = <&kp m_AT>, <&kp m_POUND>; /* @ £ Mac */
               mods = <(MOD_LSFT|MOD_RSFT)>;
          };
          w_dlr_eur: w_dollar_shift_eur {
               compatible = "zmk,behavior-mod-morph";            
               label = "WINDOWS_SWEDISH_DOLLAR_SHIFT_EURO";
               #binding-cells = <0>;
               bindings = <&kp w_DOLAR>, <&kp w_EURO>; /* $ € Windows */
               mods = <(MOD_LSFT|MOD_RSFT)>;
          };
          m_dlr_eur: m_dollar_shift_eur {
               compatible = "zmk,behavior-mod-morph";            
               label = "MAC_SWEDISH_DOLLAR_SHIFT_EURO";
               #binding-cells = <0>;
               bindings = <&kp m_DOLAR>, <&kp m_EURO>; /* $ € Mac */
               mods = <(MOD_LSFT|MOD_RSFT)>;
          };
     };

     keymap {
          compatible = "zmk,keymap";

          w_colemak_layer {
               label = "WIN_COL";
               bindings = <
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// | `          | Q          | W mod      | F mod      | P          | B          |     | J          | L          | U mod      | Y mod      | Ö          | Å          |
     &kp _BTICK   &kp Q        wHRML1(W,         F)      &kp P        &kp B              &kp J        &kp L        wHRMR1(U,         Y)      &kp _OO      &kp _OE    
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// | ESC mod    | A  mod     | R mod      | S mod      | T mod      | G mod      |     | M  mod     | N mod      | E mod      | I mod      | O mod      | Ä mod      |
     wHRML2(ESC,       A,           R,           S,           T,           G)            wHRMR2(M,         N,           E,           I,           O,           _AE)
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// | SHIFT      | Z          | X mod      | C mod      | D mod      | V mod      |     | K mod      | H mod      | , mod      | . mod      | / ?        | SHIFT      |
     &kp LSHIFT   &kp Z        wHRML3(X,         C,           D,           V)            wHRMR3(K,         H,        COMMA,        DOT)      &se_slsh     &kp RSHIFT
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
//                      | TAB FUNC         | SPACE NAV        | ENTER NUMBER     |     | DEL MOUSE        | BSP SYMBOL       | BSP NAV2         |
                          &lt wFUNC TAB      &lt wNAV SPACE     &lt wNUMBER RET          &lt wMOUSE DEL     &lt wSYMBOL BSPC   &lt wNAV2 BSPC
//                      ----------------------------------------------------------     ----------------------------------------------------------
               >;
          };

          w_gaming_layer {
               label = "WIN_QRTY ";
               bindings = <
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// | TAB        | Q          | W          | E          | R          | T          |     | Y          | U          | I mod      | O mod      | P          | Å          |
     &kp TAB      &kp Q        &kp W        &kp E        &kp R        &kp T              &kp Y        &kp U        wHRMR1(I,        O)       &kp P        &kp _OE    
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// | ESC  CTRL  | A          | S          | D          | F          | G          |     | H mod      | J mod      | K mod      | L          | Ö          | Ä          |
 &l_ht LCTRL ESC  &kp A        &kp S        &kp D        &kp F        &kp G              wHRMR2(H,         J,           K,           L,       _OO,            _AE)
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// | SHIFT      | Z          | X          | C          | V          | B          |     | N mod      | M mod      | , mod      | . mod      | / ?        | SHIFT      |
     &kp LSHIFT   &kp Z        &kp X        &kp C        &kp V        &kp B              wHRMR3(N,         M,       COMMA,         DOT)      &se_slsh     &kp RSHIFT
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
//                      | TAB FUNC         | SPACE            | ENTER NUMBER     |     | DEL MOUSE        | BSP SYMBOL       | BSP NAV2         |
                          &lt wFUNC TAB      &kp SPACE          &lt wNUMBER RET          &lt wMOUSE DEL     &lt wSYMBOL BSPC   &lt wNAV2 BSPC
//                      ----------------------------------------------------------     ----------------------------------------------------------
               >;
          };

          w_number_layer {
               label = "wNUMBER";
               bindings = <
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// | TAB        | 1          | 2          | 3          | 4          | 5          |     | 6          | 7          | 8          | 9          | 0          | - _        |
     &kp TAB      &kp N1       &kp N2       &kp N3       &kp N4       &kp N5             &kp N6       &kp N7       &kp N8       &kp N9       &kp N0       &kp _MINUS
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// | TOGGLE     | LGUI       | LALT       | LCTRL      | LSHFT      |            |     | ,          | 4          | 5          | 6          | ; :        | + ?        |
    &tog wNUMBER  &kp LGUI     &kp LALT     &kp LCTRL    &kp LSHIFT   &none              &kp COMMA    &kp N4       &kp N5       &kp N6       &se_scln     &kp _PLUS
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// | SHIFT      | UNDO       | CUT        | COPY       | CTRL + D   | PASTE      |     | .          | 1          | 2          | 3          | :          | ' "        |
     &kp LSHIFT   wSHRT3(Z,         X,           C,           D,           V)            &kp DOT      &kp N1       &kp N2       &kp N3       &kp _COLON   &se_quot
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
//                      | FUNC             | NAV SPACE        | ENTER            |     | =                | 0 SYM            | - _ NAV2         |
                          &mo wFUNC          &lt wNAV SPACE     &kp RET                  &kp _EQ            &lt wSYMBOL N0     &lt wNAV2 _MINUS 
//                      ----------------------------------------------------------     ----------------------------------------------------------
               >;
          };

          w_navigation_layer {
               label = "wNAV";
               bindings = <
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// |            | !          | @          | FIND       | CTRL + P   | GO-TO IDEA |     | HOME       | PAGE DOWN  | PAGE UP    | END        | ´ `        | - _        |
     &none        &kp EXCL     &at_pnd      wSHRT1(F,         P,           B)            &kp HOME     &kp PG_DN    &kp PG_UP    &kp END      &kp _ACUTE   &kp _MINUS
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// |            | CTRL+A mod | CTRL+R mod | CTRL+S mod | CTRL+T mod | CTRL + G   |     | LEFT       | DOWN       | UP         | RIGTH      | ; :        | + ?        |
     &none        wSHRT2(A,         R,           S,           T,           G)            &kp LEFT     &kp DOWN     &kp UP       &kp RIGHT    &se_scln     &kp _PLUS
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// | SHIFT      | UNDO       | CUT        | COPY       | CTRL + D   | PASTE      |     | <<         | vol-       | vol+       | >>         | :          | ' "        |
     &kp LSHIFT   wSHRT3(Z,         X,           C,           D,           V)            &kp C_PREV   &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT   &kp _COLON   &se_quot
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
//                      |                  |                  |                  |     | =                | _                | - _              |
                          &none              &none              &none                    &kp _EQ            &kp _UNDER         &kp _MINUS
//                      ----------------------------------------------------------     ----------------------------------------------------------
               >;
          };

          w_navigation_2_layer {
               label = "wNAV2";
               bindings = <
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// |            |            |            |            |            |            |     | HOME       | PAGE DOWN  | PAGE UP    | END        | ´ `        | MAC LAYER  |
     &none        &none        &none        &none        &none        &none              &kp HOME     &kp PG_DN    &kp PG_UP    &kp END      &kp _ACUTE   &to MAC_COL
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// |            | LGUI       | LALT       | LCTRL      | LSHFT      |            |     | LEFT       | DOWN       | UP         | RIGTH      | ; :        | + ?        |
     &none        &kp LGUI     &kp LALT     &kp LCTRL    &kp LSHIFT   &none              &kp LEFT     &kp DOWN     &kp UP       &kp RIGHT    &se_scln     &kp _PLUS
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// | SHIFT      |            |            |            |            |            |     | <<         | vol-       | vol+       | >>         | :          | ' "        |
     &kp LSHIFT   &none        &none        &none        &none        &none              &kp C_PREV   &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT   &kp _COLON   &se_quot
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
//                      | CAPS LOCK        | TOGGLE MOUSE     | TOGGLE NUMBER    |     |                  |                  |                  |
                          &kp CAPS           &tog wMOUSE        &tog wNUMBER              &none              &none              &none
//                      ----------------------------------------------------------     ----------------------------------------------------------
               >;
          };

          w_function_layer {
               label = "wFUNC";
               bindings = <
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// | WIN LAYER  | 1          | 2          | 3          | 4          | 5          |     | F12        | F7         | F8         | F9         |            | reset      |
     &to WIN_COL  &kp N1       &kp N2       &kp N3       &kp N4       &kp N5             &kp F12      &kp F7       &kp F8       &kp F9       &none        &sys_reset
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// |            | LGUI       | LALT       | LCTRL      | LSHFT      | GAMING     |     | F11        | F4         | F5         | F6         |            |            |
     &none        &kp LGUI     &kp LALT     &kp LCTRL    &kp LSHIFT  &to WIN_QRTY        &kp F11      &kp F4       &kp F5       &kp F6       &none        &none 
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// | BTCLR      | BT1        | BT2        | BT3        | BT4        | COLEMAK    |     | F10        | F1         | F2         | F3         |            |            |
     &bt BT_CLR  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3  &to WIN_COL        &kp F10      &kp F1       &kp F2       &kp F3       &none        &none 
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
//                      |                  |                  |                  |     | DEL              | BSPC             | CAPS             |
                          &none              &none              &none                    &kp DEL            &kp BSPC           &kp CAPS
//                      ----------------------------------------------------------     ----------------------------------------------------------
               >;
          };

          w_symbol_layer {
               label = "wSYMBOL";
               bindings = <
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// | ~          | !          | @ £        | [ {        | ] }        | #          |     |            |            |            |            |            |            |
     &kp w_TILDE  &kp EXCL     &w_at_pnd    &w_se_lbrc   &w_se_rbrc   &kp HASH           &none        &none        &none        &none        &none        &none
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// | £ µ        | &          | $ €        | (          | )          | %          |     |            | RSHFT      | RCTRL      | RALT       | RGUI       | RCTRL      |
     &w_pnd_mic   &kp _AMPER   &w_dlr_eur   &kp _LPAR    &kp _RPAR    &kp PRCNT          &none        &kp RSHIFT   &kp RCTRL    &kp RALT     &kp RGUI     &kp RCTRL
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// | \          | "|"        | ^          | <          | >          | *          |     |            |            |            |            |            | SHIFT      |
     &kp w_BSLH   &kp w_PIPE   &kp _TOP     &kp _LT      &kp _GT      &kp _ASTRX         &none        &none        &none        &none        &none        &kp RSHIFT
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
//                      | SPACE            | SPACE            | ENTER            |     |                  |                  |                  |  
                          &kp SPACE          &kp SPACE          &kp RET                  &none              &none              &none
//                      ----------------------------------------------------------     ----------------------------------------------------------  
               >;
          };

          w_mouse_layer {
               label = "wMOUSE";
               bindings = <
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// | TAB        |            | SCROLL LEFT| MOUSE UP   |SCROLL RIGHT|            |     |            |            |            |            |            |            |
     &kp TAB      &none        &mwh _MS_L   &mmv _MM_U  &mwh _MS_R   &none              &none        &none        &none        &none        &none        &none
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// |TOGGLE MOUSE|            | MOUSE LEFT | MOUSE DOWN | MOUSE RIGHT|            |     | LEFT  mod  | DOWN mod   | UP mod     | RIGHT mod  | HOME mod   | END mod    |
     &tog wMOUSE  &none        &mmv _MM_L   &mmv _MM_D   &mmv _MM_R  &none               wHRMR2(LEFT,      DOWN,        UP,          RIGHT,       HOME,        END)  
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// |            |            |            | SCROLL DOWN| SCROLL UP  |            |     |            | LEFT CLICK | RIGHT CLICK|            |            |            |
     &none        &none        &none        &mwh _MS_D   &mwh _MS_U   &none              &none        &mkp LCLK    &mkp RCLK    &none        &none        &none
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
//                      | SPC              | LEFT CLICK       | RIGHT CLICK      |     |                  |                  |                  |
                          &kp SPACE          &mkp LCLK          &mkp RCLK                &none              &none              &none
//                      ----------------------------------------------------------     ----------------------------------------------------------
               >;
          };

          m_colemak_layer {
               label = "MAC_COL";
               bindings = <
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// | `          | Q          | W mod      | F mod      | P          | B          |     | J          | L          | U mod      | Y mod      | Ö          | Å          |
     &kp _BTICK   &kp Q        mHRML1(W,         F)      &kp P        &kp B              &kp J        &kp L        mHRMR1(U,         Y)      &kp _OO      &kp _OE    
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// | ESC mod    | A  mod     | R mod      | S mod      | T mod      | G mod      |     | M  mod     | N mod      | E mod      | I          | O          | Ä          |
     mHRML2(ESC,       A,           R,           S,           T,           G)            mHRMR2(M,         N,           E,           I,           O,           _AE)
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// | SHIFT      | Z          | X mod      | C mod      | D mod      | V mod      |     | K mod      | H mod      | , mod      | . mod      | / ?        | SHIFT      |
     &kp LSHIFT   &kp Z        mHRML3(X,         C,           D,           V)            mHRMR3(K,         H,        COMMA,        DOT)      &se_slsh     &kp RSHIFT
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
//                      | TAB FUNC         | SPACE NAV        | ENTER NUMBER     |     | DEL MOUSE        | BSP SYMBOL       | BSP NAV2         |
                          &lt mFUNC TAB      &lt mNAV SPACE     &lt mNUMBER RET          &lt mMOUSE DEL     &lt mSYMBOL BSPC   &lt mNAV2 BSPC
//                      ----------------------------------------------------------     ----------------------------------------------------------
               >;
          };

          m_gaming_layer {
               label = "MAC_QRTY";
               bindings = <
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// | TAB        | Q          | W          | E          | R          | T          |     | Y          | U          | I          | O          | P          | Å          |
     &kp TAB      &kp Q        &kp W        &kp E        &kp R        &kp T              &kp Y        &kp U        &kp I        &kp O        &kp P        &kp _OE    
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// | ESC  CTRL  | A          | S          | D          | F          | G          |     | H          | J          | K          | L          | Ö          | Ä          |
 &l_ht LCTRL ESC  &kp A        &kp S        &kp D        &kp F        &kp G              &kp H        &kp J        &kp K        &kp L        &kp _OO      &kp _AE
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// | SHIFT      | Z          | X          | C          | V          | B          |     | N          | M          | ,          | .          | / ?        | SHIFT      |
     &kp LSHIFT   &kp Z        &kp X        &kp C        &kp V        &kp B              &kp N        &kp M        &kp COMMA    &kp DOT      &se_slsh     &kp RSHIFT
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
//                      | TAB FUNC         | SPACE            | ENTER NUMBER     |     | DEL MOUSE        | BSP SYMBOL       | BSP NAV2         |
                          &lt mFUNC TAB      &kp SPACE          &lt mNUMBER RET          &lt mMOUSE DEL     &lt mSYMBOL BSPC   &lt mNAV2 BSPC
//                      ----------------------------------------------------------     ----------------------------------------------------------
               >;
          };

          m_number_layer {
               label = "mNUMBER";
               bindings = <
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// | TAB        | 1          | 2          | 3          | 4          | 5          |     | 6          | 7          | 8          | 9          | 0          | - _        |
     &kp TAB      &kp N1       &kp N2       &kp N3       &kp N4       &kp N5             &kp N6       &kp N7       &kp N8       &kp N9       &kp N0       &kp _MINUS
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// | TOGGLE     | LGUI       | LALT       | LCTRL      | LSHFT      |            |     | ,          | 4          | 5          | 6          | ; :        | + ?        |
    &tog mNUMBER  &kp LGUI     &kp LALT     &kp LCTRL    &kp LSHIFT   &none              &kp COMMA    &kp N4       &kp N5       &kp N6       &se_scln     &kp _PLUS
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// | SHIFT      | UNDO       | CUT        | COPY       | CTRL + D   | PASTE      |     | .          | 1          | 2          | 3          | :          | ' "        |
     &kp LSHIFT   mSHRT3(Z,         X,           C,           D,           V)            &kp DOT      &kp N1       &kp N2       &kp N3       &kp _COLON   &se_quot
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
//                      | FUNC             | NAV SPACE        | ENTER            |     | =                | 0 SYM            | - _ NAV2         |
                          &mo mFUNC          &lt mNAV SPACE     &kp RET                  &kp _EQ            &lt mSYMBOL N0     &lt mNAV2 _MINUS 
//                      ----------------------------------------------------------     ----------------------------------------------------------
               >;
          };

          m_navigation_layer {
               label = "mNAV";
               bindings = <
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// |            | !          | @          | FIND       | CTRL + P   | GO-TO IDEA |     | HOME       | PAGE DOWN  | PAGE UP    | END        | ´ `        | - _        |
     &none        &kp EXCL     &at_pnd      mSHRT1(F,         P,           B)            &kp HOME     &kp PG_DN    &kp PG_UP    &kp END      &kp _ACUTE   &kp _MINUS
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// |            | CTRL+A mod | CTRL+R mod | CTRL+S mod | CTRL+T mod | CTRL + G   |     | LEFT       | DOWN       | UP         | RIGTH      | ; :        | + ?        |
     &none        mSHRT2(A,         R,           S,           T,           G)            &kp LEFT     &kp DOWN     &kp UP       &kp RIGHT    &se_scln     &kp _PLUS
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// | SHIFT      | UNDO       | CUT        | COPY       | CTRL + D   | PASTE      |     | <<         | vol-       | vol+       | >>         | :          | ' "        |
     &kp LSHIFT   mSHRT3(Z,         X,           C,           D,           V)            &kp C_PREV   &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT   &kp _COLON   &se_quot
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
//                      |                  |                  |                  |     | =                | _                | - _              |
                          &none              &none              &none                    &kp _EQ            &kp _UNDER         &kp _MINUS
//                      ----------------------------------------------------------     ----------------------------------------------------------
               >;
          };

          m_navigation_2_layer {
               label = "mNAV2";
               bindings = <
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// |            |            |            |            |            |            |     | HOME       | PAGE DOWN  | PAGE UP    | END        | ´ `        | MAC LAYER  |
     &none        &none        &none        &none        &none        &none              &kp HOME     &kp PG_DN    &kp PG_UP    &kp END      &kp _ACUTE   &to MAC_COL
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// |            | LGUI       | LALT       | LCTRL      | LSHFT      |            |     | LEFT       | DOWN       | UP         | RIGTH      | ; :        | + ?        |
     &none        &kp LGUI     &kp LALT     &kp LCTRL    &kp LSHIFT   &none              &kp LEFT     &kp DOWN     &kp UP       &kp RIGHT    &se_scln     &kp _PLUS
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// | SHIFT      |            |            |            |            |            |     | <<         | vol-       | vol+       | >>         | :          | ' "        |
     &kp LSHIFT   &none        &none        &none        &none        &none              &kp C_PREV   &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT   &kp _COLON   &se_quot
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
//                      | CAPS LOCK        | TOGGLE MOUSE     | TOGGLE NUMBER    |     |                  |                  |                  |
                          &kp CAPS           &tog mMOUSE        &tog mNUMBER              &none              &none              &none
//                      ----------------------------------------------------------     ----------------------------------------------------------
               >;
          };

          m_function_layer {
               label = "mFUNC";
               bindings = <
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// | WIN LAYER  | 1          | 2          | 3          | 4          | 5          |     | F12        | F7         | F8         | F9         |            | reset      |
    &to WIN_COL  &kp N1       &kp N2       &kp N3       &kp N4       &kp N5              &kp F12      &kp F7       &kp F8       &kp F9       &none        &sys_reset
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// |            | LGUI       | LALT       | LCTRL      | LSHFT      | GAMING     |     | F11        | F4         | F5         | F6         |            |            |
     &none        &kp LGUI     &kp LALT     &kp LCTRL    &kp LSHIFT  &to MAC_QRTY        &kp F11      &kp F4       &kp F5       &kp F6       &none        &none 
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// | BTCLR      | BT1        | BT2        | BT3        | BT4        | COLEMAK    |     | F10        | F1         | F2         | F3         |            |            |
     &bt BT_CLR  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3  &to MAC_COL        &kp F10      &kp F1       &kp F2       &kp F3       &none        &none 
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
//                      |                  |                  |                  |     | DEL              | BSPC             | CAPS             |
                          &none              &none              &none                    &kp DEL            &kp BSPC           &kp CAPS
//                      ----------------------------------------------------------     ----------------------------------------------------------
               >;
          };

          m_symbol_layer {
               label = "mSYMBOL";
               bindings = <
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// | ~          | !          | @ £        | [ {        | ] }        | #          |     |            |            |            |            |            |            |
     &kp m_TILDE  &kp EXCL     &m_at_pnd    &m_se_lbrc   &m_se_rbrc   &kp HASH           &none        &none        &none        &none        &none        &none
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// | £ µ        | &          | $ €        | (          | )          | %          |     |            | RSHFT      | RCTRL      | RALT       | RGUI       | RCTRL      |
     &m_pnd_mic   &kp _AMPER   &m_dlr_eur   &kp _LPAR    &kp _RPAR    &kp PRCNT          &none        &kp RSHIFT   &kp RCTRL    &kp RALT     &kp RGUI     &kp RCTRL
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// | \          | "|"        | ^          | <          | >          | *          |     |            |            |            |            |            | SHIFT      |
     &kp m_BSLH   &kp m_PIPE   &kp _TOP     &kp _LT      &kp _GT      &kp _ASTRX         &none        &none        &none        &none        &none        &kp RSHIFT
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
//                      | SPACE            | SPACE            | ENTER            |     |                  |                  |                  |  
                          &kp SPACE          &kp SPACE          &kp RET                  &none              &none              &none
//                      ----------------------------------------------------------     ----------------------------------------------------------  
               >;
          };

          m_mouse_layer {
               label = "mMOUSE";
               bindings = <
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// | TAB        |            | SCROLL LEFT| MOUSE UP   |SCROLL RIGHT|            |     |            |            |            |            |            |            |
     &kp TAB      &none        &mwh _MS_L   &mmv _MM_U   &mwh _MS_R   &none              &none        &none        &none        &none        &none        &none
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// |TOGGLE MOUSE|            | MOUSE LEFT | MOUSE DOWN | MOUSE RIGHT|            |     | LEFT  mod  | DOWN mod   | UP mod     | RIGHT mod  | HOME mod   | END mod    |
    &tog mMOUSE   &none        &mmv _MM_L   &mmv _MM_D   &mmv _MM_R   &none              mHRMR2(LEFT,      DOWN,        UP,          RIGHT,       HOME,        END)  
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
// |            |            |            | SCROLL DOWN| SCROLL UP  |            |     |            | LEFT CLICK | RIGHT CLICK|            |            |            |
     &none        &none        &none        &mwh _MS_D   &mwh _MS_U   &none              &none        &mkp LCLK    &mkp RCLK    &none        &none        &none
// -------------------------------------------------------------------------------     -------------------------------------------------------------------------------
//                      | SPACE            | LEFT CLICK       | RIGHT CLICK      |     |                  |                  |                  |
                          &kp SPACE          &mkp LCLK          &mkp RCLK                &none              &none              &none
//                      ----------------------------------------------------------     ----------------------------------------------------------
               >;
          };

     };
};
